&ACCESS RV
&PARAM TEMPLATE = C:\KRC\Roboter\Template\FunctionVorgabe
&PARAM EDITMASK = *
DEFFCT INT DAY_OF_THE_WEEK(y :IN, m :IN, d :IN)
; Tomohiko Sakamotoâ€™s Algorithm- Finding the day of the week
; Returns:
; 0: Sunday
; 1: Monday
; 2: Tuesday
; 3: Wednesday
; 4: Thursday
; 5: Friday
; 6: Saturday
; -1: on error
INT y, m, d ; Year, Month, Day
INT t[12]
DECL DATE stDate

; If not initialized, use the current time
IF (VarState("y") <> #INITIALIZED) OR (VarState("m") <> #INITIALIZED) OR (VarState("d") <> #INITIALIZED) THEN
  stDate = $DATE
  y = stDate.YEAR
  m = stDate.MONTH
  d = stDate.DAY
ENDIF

IF (y < 2000) OR (y > 2099) THEN
  RETURN -1
ENDIF
IF (m < 1) OR (m > 12) THEN
  RETURN -1
ENDIF
IF (d < 1) OR (d > 31) THEN
  RETURN -1
ENDIF

t[1] = 0
t[2] = 3
t[3] = 2
t[4] = 5
t[5] = 0
t[6] = 3
t[7] = 5
t[8] = 1
t[9] = 4
t[10] = 6
t[11] = 2
t[12] = 4

IF m < 3 THEN
  y = y - 1
ENDIF

RETURN MODULO(y + y / 4 - y / 100 + y / 400 + t[m] + d, 7)

ENDFCT

; Original Code:
;
; // A CPP program to implement
; // the Tomohiko Sakamoto Algorithm
; #include <bits/stdc++.h>
; using namespace std;
;
; // function to implement tomohiko
; // sakamoto algorithm
; int day_of_the_week(int y, int m, int d)
; {
;     // array with leading number of days values
;     int t[] = { 0, 3, 2, 5, 0, 3, 5, 1, 4, 6, 2, 4 };
;
;     // if month is less than 3 reduce year by 1
;     if (m < 3)
;         y -= 1;
;
;     return ((y + y / 4 - y / 100 + y / 400 + t[m - 1] + d) % 7);
; }
;
; // Driver Code
; int main(void)
; {
;     int day = 13, month = 7, year = 2017;
;     cout<<(day_of_the_week(year, month, day));
;     return 0 ;
; }
;
; // This code is contributed by Nikita Tiwari.
